#!/usr/bin/env python3
import pyudev
import subprocess

# it's ID_MODEL
reset_wmaker = [
    # sadly the only way. No programmatic access to a runnign
    # wmaker.
    ["sleep", "0.5"],
    ["xdotool", "key", "ctrl+super+shift+a"],
    ["xdotool", "key", "KP_Up"],
    ["xdotool", "key", "KP_Up"],
    ["xdotool", "key", "Return"]
]

configured = {
    "2.4G_Mouse": [
        # ["say", "mouse configured"]
    ],
    "Pro_Gaming_Keyboard": [
        ["xmodmap", "/home/p/.Xmodmap"],
        ["g810-led", "-dv", "046d", "-dp", "c339",
         "-ds", "1463386A3531", "-a", "401509"],
        ["g810-led", "-dv", "046d", "-dp", "c339",
         "-ds", "1463386A3531", "-g", "logo", "220000"],
        ["g810-led", "-c"],
        # ["say", "keyboard configured"]
    ],
    "slow": [["sudo", "/bin/slow"]],
    "fast": [["sudo", "/bin/fast"]],
    "nec-in": [
        ["sh", "-c", "/home/p/.screenlayout/home-nec-left.sh"],
    ] + reset_wmaker,
    "nec-out": [
        ["sh", "-c", "/home/p/.screenlayout/laptop-lores.sh"]
    ] + reset_wmaker
}

def dp1_plugged_in(dev):
    status_devpath="/sys/" + dev + "/card0-DP-1/status"
    st = list(map(lambda s: s.strip(), open(status_devpath).readlines()))
    if "connected" in st:
        return 1
    elif "disconnected" in st:
        return 0
    else:
        return None

def run_scripts_for(key):
    for script in configured.get(key, []):
        subprocess.run(script)

def maybe_run_script(d):
    action = d.properties.get("ACTION")
    id_model = d.properties.get("ID_MODEL")
    subsystem = d.properties.get("SUBSYSTEM")
    devpath = d.properties.get("DEVPATH")
    ac_power = d.properties.get("POWER_SUPPLY_ONLINE")
    if action=="bind" and id_model:
        run_scripts_for(id_model)
    if action=="change" and subsystem=="drm":
        status = dp1_plugged_in(devpath)
        if status == 1:
            run_scripts_for("nec-in")
        elif status == 0:
            run_scripts_for("nec-out")
    if action=="change" and ac_power == "1":
        run_scripts_for("fast")
    elif action=="change" and ac_power == "0":
        # will be None if this is not an ac power event
        run_scripts_for("slow")

def main():
    monitor = pyudev.Monitor.from_netlink(pyudev.Context())
    #monitor.filter_by(subsystem='usb')
    monitor.start()

    for d in iter(monitor.poll, None):
        maybe_run_script(d)

if __name__ == '__main__':
    main()

